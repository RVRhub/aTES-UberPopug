/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package rvr.uberpopug.schemaregistry.avro.taskmanager.v1;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class StreamEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -6415004845630829643L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StreamEvent\",\"namespace\":\"rvr.uberpopug.schemaregistry.avro.taskmanager.v1\",\"fields\":[{\"name\":\"publicId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"title\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"description\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"status\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},{\"name\":\"account_public_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"event_id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"event_version\",\"type\":[\"int\"],\"default\":1},{\"name\":\"event_name\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"event_time\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<StreamEvent> ENCODER =
      new BinaryMessageEncoder<StreamEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StreamEvent> DECODER =
      new BinaryMessageDecoder<StreamEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<StreamEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<StreamEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<StreamEvent>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this StreamEvent to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a StreamEvent from a ByteBuffer. */
  public static StreamEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String publicId;
  @Deprecated public java.lang.String title;
  @Deprecated public java.lang.String description;
  @Deprecated public java.lang.String status;
  @Deprecated public java.lang.String account_public_id;
  @Deprecated public java.lang.String event_id;
  @Deprecated public java.lang.Object event_version;
  @Deprecated public java.lang.Object event_name;
  @Deprecated public java.lang.String event_time;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StreamEvent() {}

  /**
   * All-args constructor.
   * @param publicId The new value for publicId
   * @param title The new value for title
   * @param description The new value for description
   * @param status The new value for status
   * @param account_public_id The new value for account_public_id
   * @param event_id The new value for event_id
   * @param event_version The new value for event_version
   * @param event_name The new value for event_name
   * @param event_time The new value for event_time
   */
  public StreamEvent(java.lang.String publicId, java.lang.String title, java.lang.String description, java.lang.String status, java.lang.String account_public_id, java.lang.String event_id, java.lang.Object event_version, java.lang.Object event_name, java.lang.String event_time) {
    this.publicId = publicId;
    this.title = title;
    this.description = description;
    this.status = status;
    this.account_public_id = account_public_id;
    this.event_id = event_id;
    this.event_version = event_version;
    this.event_name = event_name;
    this.event_time = event_time;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return publicId;
    case 1: return title;
    case 2: return description;
    case 3: return status;
    case 4: return account_public_id;
    case 5: return event_id;
    case 6: return event_version;
    case 7: return event_name;
    case 8: return event_time;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: publicId = (java.lang.String)value$; break;
    case 1: title = (java.lang.String)value$; break;
    case 2: description = (java.lang.String)value$; break;
    case 3: status = (java.lang.String)value$; break;
    case 4: account_public_id = (java.lang.String)value$; break;
    case 5: event_id = (java.lang.String)value$; break;
    case 6: event_version = (java.lang.Object)value$; break;
    case 7: event_name = (java.lang.Object)value$; break;
    case 8: event_time = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'publicId' field.
   * @return The value of the 'publicId' field.
   */
  public java.lang.String getPublicId() {
    return publicId;
  }

  /**
   * Sets the value of the 'publicId' field.
   * @param value the value to set.
   */
  public void setPublicId(java.lang.String value) {
    this.publicId = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.String value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'account_public_id' field.
   * @return The value of the 'account_public_id' field.
   */
  public java.lang.String getAccountPublicId() {
    return account_public_id;
  }

  /**
   * Sets the value of the 'account_public_id' field.
   * @param value the value to set.
   */
  public void setAccountPublicId(java.lang.String value) {
    this.account_public_id = value;
  }

  /**
   * Gets the value of the 'event_id' field.
   * @return The value of the 'event_id' field.
   */
  public java.lang.String getEventId() {
    return event_id;
  }

  /**
   * Sets the value of the 'event_id' field.
   * @param value the value to set.
   */
  public void setEventId(java.lang.String value) {
    this.event_id = value;
  }

  /**
   * Gets the value of the 'event_version' field.
   * @return The value of the 'event_version' field.
   */
  public java.lang.Object getEventVersion() {
    return event_version;
  }

  /**
   * Sets the value of the 'event_version' field.
   * @param value the value to set.
   */
  public void setEventVersion(java.lang.Object value) {
    this.event_version = value;
  }

  /**
   * Gets the value of the 'event_name' field.
   * @return The value of the 'event_name' field.
   */
  public java.lang.Object getEventName() {
    return event_name;
  }

  /**
   * Sets the value of the 'event_name' field.
   * @param value the value to set.
   */
  public void setEventName(java.lang.Object value) {
    this.event_name = value;
  }

  /**
   * Gets the value of the 'event_time' field.
   * @return The value of the 'event_time' field.
   */
  public java.lang.String getEventTime() {
    return event_time;
  }

  /**
   * Sets the value of the 'event_time' field.
   * @param value the value to set.
   */
  public void setEventTime(java.lang.String value) {
    this.event_time = value;
  }

  /**
   * Creates a new StreamEvent RecordBuilder.
   * @return A new StreamEvent RecordBuilder
   */
  public static rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder newBuilder() {
    return new rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder();
  }

  /**
   * Creates a new StreamEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StreamEvent RecordBuilder
   */
  public static rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder newBuilder(rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder other) {
    return new rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder(other);
  }

  /**
   * Creates a new StreamEvent RecordBuilder by copying an existing StreamEvent instance.
   * @param other The existing instance to copy.
   * @return A new StreamEvent RecordBuilder
   */
  public static rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder newBuilder(rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent other) {
    return new rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder(other);
  }

  /**
   * RecordBuilder for StreamEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StreamEvent>
    implements org.apache.avro.data.RecordBuilder<StreamEvent> {

    private java.lang.String publicId;
    private java.lang.String title;
    private java.lang.String description;
    private java.lang.String status;
    private java.lang.String account_public_id;
    private java.lang.String event_id;
    private java.lang.Object event_version;
    private java.lang.Object event_name;
    private java.lang.String event_time;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.publicId)) {
        this.publicId = data().deepCopy(fields()[0].schema(), other.publicId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.account_public_id)) {
        this.account_public_id = data().deepCopy(fields()[4].schema(), other.account_public_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_id)) {
        this.event_id = data().deepCopy(fields()[5].schema(), other.event_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.event_version)) {
        this.event_version = data().deepCopy(fields()[6].schema(), other.event_version);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.event_name)) {
        this.event_name = data().deepCopy(fields()[7].schema(), other.event_name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.event_time)) {
        this.event_time = data().deepCopy(fields()[8].schema(), other.event_time);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing StreamEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.publicId)) {
        this.publicId = data().deepCopy(fields()[0].schema(), other.publicId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.title)) {
        this.title = data().deepCopy(fields()[1].schema(), other.title);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.description)) {
        this.description = data().deepCopy(fields()[2].schema(), other.description);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.account_public_id)) {
        this.account_public_id = data().deepCopy(fields()[4].schema(), other.account_public_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.event_id)) {
        this.event_id = data().deepCopy(fields()[5].schema(), other.event_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.event_version)) {
        this.event_version = data().deepCopy(fields()[6].schema(), other.event_version);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.event_name)) {
        this.event_name = data().deepCopy(fields()[7].schema(), other.event_name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.event_time)) {
        this.event_time = data().deepCopy(fields()[8].schema(), other.event_time);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'publicId' field.
      * @return The value.
      */
    public java.lang.String getPublicId() {
      return publicId;
    }

    /**
      * Sets the value of the 'publicId' field.
      * @param value The value of 'publicId'.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder setPublicId(java.lang.String value) {
      validate(fields()[0], value);
      this.publicId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'publicId' field has been set.
      * @return True if the 'publicId' field has been set, false otherwise.
      */
    public boolean hasPublicId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'publicId' field.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder clearPublicId() {
      publicId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.String getTitle() {
      return title;
    }

    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder setTitle(java.lang.String value) {
      validate(fields()[1], value);
      this.title = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder clearTitle() {
      title = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.String getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder setDescription(java.lang.String value) {
      validate(fields()[2], value);
      this.description = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder clearDescription() {
      description = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder setStatus(java.lang.String value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'account_public_id' field.
      * @return The value.
      */
    public java.lang.String getAccountPublicId() {
      return account_public_id;
    }

    /**
      * Sets the value of the 'account_public_id' field.
      * @param value The value of 'account_public_id'.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder setAccountPublicId(java.lang.String value) {
      validate(fields()[4], value);
      this.account_public_id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'account_public_id' field has been set.
      * @return True if the 'account_public_id' field has been set, false otherwise.
      */
    public boolean hasAccountPublicId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'account_public_id' field.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder clearAccountPublicId() {
      account_public_id = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_id' field.
      * @return The value.
      */
    public java.lang.String getEventId() {
      return event_id;
    }

    /**
      * Sets the value of the 'event_id' field.
      * @param value The value of 'event_id'.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder setEventId(java.lang.String value) {
      validate(fields()[5], value);
      this.event_id = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'event_id' field has been set.
      * @return True if the 'event_id' field has been set, false otherwise.
      */
    public boolean hasEventId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'event_id' field.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder clearEventId() {
      event_id = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_version' field.
      * @return The value.
      */
    public java.lang.Object getEventVersion() {
      return event_version;
    }

    /**
      * Sets the value of the 'event_version' field.
      * @param value The value of 'event_version'.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder setEventVersion(java.lang.Object value) {
      validate(fields()[6], value);
      this.event_version = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'event_version' field has been set.
      * @return True if the 'event_version' field has been set, false otherwise.
      */
    public boolean hasEventVersion() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'event_version' field.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder clearEventVersion() {
      event_version = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_name' field.
      * @return The value.
      */
    public java.lang.Object getEventName() {
      return event_name;
    }

    /**
      * Sets the value of the 'event_name' field.
      * @param value The value of 'event_name'.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder setEventName(java.lang.Object value) {
      validate(fields()[7], value);
      this.event_name = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'event_name' field has been set.
      * @return True if the 'event_name' field has been set, false otherwise.
      */
    public boolean hasEventName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'event_name' field.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder clearEventName() {
      event_name = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_time' field.
      * @return The value.
      */
    public java.lang.String getEventTime() {
      return event_time;
    }

    /**
      * Sets the value of the 'event_time' field.
      * @param value The value of 'event_time'.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder setEventTime(java.lang.String value) {
      validate(fields()[8], value);
      this.event_time = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'event_time' field has been set.
      * @return True if the 'event_time' field has been set, false otherwise.
      */
    public boolean hasEventTime() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'event_time' field.
      * @return This builder.
      */
    public rvr.uberpopug.schemaregistry.avro.taskmanager.v1.StreamEvent.Builder clearEventTime() {
      event_time = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StreamEvent build() {
      try {
        StreamEvent record = new StreamEvent();
        record.publicId = fieldSetFlags()[0] ? this.publicId : (java.lang.String) defaultValue(fields()[0]);
        record.title = fieldSetFlags()[1] ? this.title : (java.lang.String) defaultValue(fields()[1]);
        record.description = fieldSetFlags()[2] ? this.description : (java.lang.String) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (java.lang.String) defaultValue(fields()[3]);
        record.account_public_id = fieldSetFlags()[4] ? this.account_public_id : (java.lang.String) defaultValue(fields()[4]);
        record.event_id = fieldSetFlags()[5] ? this.event_id : (java.lang.String) defaultValue(fields()[5]);
        record.event_version = fieldSetFlags()[6] ? this.event_version : (java.lang.Object) defaultValue(fields()[6]);
        record.event_name = fieldSetFlags()[7] ? this.event_name : (java.lang.Object) defaultValue(fields()[7]);
        record.event_time = fieldSetFlags()[8] ? this.event_time : (java.lang.String) defaultValue(fields()[8]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StreamEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<StreamEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StreamEvent>
    READER$ = (org.apache.avro.io.DatumReader<StreamEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
